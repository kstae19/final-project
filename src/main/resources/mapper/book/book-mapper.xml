<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bookMapper">
	
	<!-- resultMap 영역 -->
	<!-- 책 -->
	<resultMap id="bookResultSet" type="book">
		<result column="ISBN13" property="ISBN13" />
		<result column="BOOK_COUNT" property="bookCount" />
		<result column="BOOK_REPLY_CONTENT" property="bookReply" />
	</resultMap>
	
	<!-- 한줄평 -->
	<resultMap id="bookReplyResultSet" type="bookReply">
		<result column="REPLY_DATE" property="bookReplyDate" />
		<result column="BOOK_REPLY_CONTENT" property="bookReplyContent" />
		<result column="USER_ID" property="userId" />
		<result column="ECO_HISTORY_NO" property="ecoNo" />
	</resultMap>
	
	<!-- 독후감 게시글 -->
	<resultMap id="bookReportResultSet" type="bookReport">
		<result column="BOOK_REPORT_NO" property="bookReportNo" />
		<result column="BOOK_REPORT_NOTICE" property="bookReportNotice" />
		<result column="BOOK_REPORT_CONTENT" property="bookReportContent" />
		<result column="BOOK_REPORT_TITLE" property="bookReportTitle" />
		<result column="USER_ID" property="userId" />
		<result column="REPORT_DATE" property="bookReportDate" />
		<result column="BOOK_REPORT_COUNT" property="bookReportCount" />
		<result column="BOOK_REPORT_SECRET" property="bookReportSecret" />
		<result column="BOOK_REPORT_STAR" property="bookReportStar" />
	</resultMap>
	
	<!-- 독후감 게시글 댓글 -->
	<resultMap id="bookReportReplyResultSet" type="bookReportReply">
		<result column="BOOK_REPORT_REPLY_NO" property="bookReportReplyNo" />
		<result column="BOOK_REPLY_DATE" property="bookReportReplyDate" />
		<result column="BOOK_REPORT_REPLY_CONTENT" property="bookReportReplyContent" />
		<result column="USER_ID" property="userId" />
		<result column="BOOK_REPORT_NO" property="bookReportNo" />
	</resultMap>
	
	
	<!-- 도서 조회수 조회 -->
	<select id="countList" resultType="book">
		SELECT
			ISBN13 ISBN13,
    		BOOK_COUNT bookCount
		FROM
			TB_BOOK
	</select>

	<!-- 도서정보insert -->
	<insert id="insertBook" parameterType="Book">
		INSERT INTO TB_BOOK
						(
						ISBN13,
						BOOK_COUNT
						)
		VALUES
						(
						#{ISBN13},
						1
						)
	</insert>
	
	<!-- 도서정보 조회수 증가 -->
	<update id="increaseBook" parameterType="String">
		UPDATE TB_BOOK
		SET
			BOOK_COUNT = BOOK_COUNT + 1
		WHERE
			ISBN13 = #{ISBN}
	</update>
	
	<!-- 도서정보 조회수 조회 -->
	<select id="countBook" parameterType="String" resultType="_int">
		SELECT
			BOOK_COUNT
		FROM
			TB_BOOK
		WHERE
			ISBN13 = #{ISBN}
	</select>
	
	<!-- 북마크 추가 -->
	<insert id="insertBookMark" parameterType="hashmap">
		INSERT INTO TB_LIKE_BOOK
		VALUES
				(
				#{userNo},
				#{ISBN}
				)
	</insert>
	
	<!-- 북마크 제거 -->
	<delete id="removeBookMark" parameterType="hashmap">
		DELETE FROM TB_LIKE_BOOK
		WHERE
			ISBN13 = #{ISBN}
		AND
			USER_NO = #{userNo}
	</delete>
	
	<!-- 북마크 조회 -->
	<select id="selectBookMark" parameterType="hashmap" 
			resultType="_int">
		SELECT
			COUNT(*)
		FROM
			TB_LIKE_BOOK
		WHERE
			ISBN13 = #{ISBN}
		AND
			USER_NO = #{userNo}
	</select>
	
	<!-- 도서 한줄평 등록 -->
	<insert id="insertBookReply" parameterType="hashmap">
		INSERT ALL
				WHEN 
				<![CDATA[
					(SELECT 
						COUNT(*)
					FROM 
						TB_BOOK_REPLY
					WHERE
						USER_NO = #{userNo}
					AND
						ISBN13 = #{ISBN13}
					) < 1
				]]>
				THEN
				INTO TB_ECO_HISTORY
				VALUES 
					(
					#{userNo},
					10,
					SYSDATE,
					'B',
					SEQ_ECO_HISTORY.NEXTVAL
					)
				INTO TB_BOOK_REPLY
				VALUES 
					(
					SYSDATE,
					#{content},
					#{ISBN13},
					#{userNo},
					SEQ_ECO_HISTORY.CURRVAL
					)
				SELECT * FROM DUAL
	</insert>
	
	<!-- 도서 한줄평 개수 조회 -->
	<select id="ajaxSelectBookReplyCount" parameterType="string" resultType="_int">
		SELECT
			COUNT(*)
		FROM
			TB_BOOK_REPLY
		WHERE
			ISBN13 = #{ISBN13}
	</select>
	
	<!-- 도서 한줄평 리스트 조회 -->
	<select id="ajaxSelectBookReply" parameterType="string" resultMap="bookReplyResultSet">
		SELECT 
			TO_CHAR(BOOK_REPLY_DATE, 'YYYY-MM-DD') AS "REPLY_DATE",
			BOOK_REPLY_CONTENT,
			USER_ID,
			ECO_HISTORY_NO
		FROM
			TB_BOOK_REPLY
		JOIN
			TB_USER USING(USER_NO)
		JOIN
			TB_BOOK USING(ISBN13)
		WHERE
			ISBN13 = #{ISBN13}
		ORDER
		BY
			BOOK_REPLY_DATE DESC
	</select>
	
	<!-- 도서 한줄평 삭제 전 에코포인트 환수 -->
	<delete id="ajaxDeleteBookEco" parameterType="hashmap">
		DELETE 
		FROM TB_ECO_HISTORY
		WHERE USER_NO = #{userNo}
		AND ECO_HISTORY_NO = #{ecoNo}
	</delete>
	
	<!-- 도서 한줄평 삭제  -->
	<delete id="ajaxDeleteBookReply" parameterType="hashMap">
		DELETE 
		FROM TB_BOOK_REPLY
		WHERE ISBN13 = #{ISBN13}
		AND USER_NO = #{userNo}
	</delete>
	
	<!-- 독후감 게시글 개수 조회 -->
	<select id="reportCount" resultType="_int">
		SELECT COUNT(*)
		FROM TB_BOOK_REPORT
		WHERE
			BOOK_REPORT_STATUS = 'Y'
	</select>
	
	<!-- 독후감 게시글 리스트 조회 -->
	<select id="selectReportList" resultMap="bookReportResultSet">
		SELECT      
			BOOK_REPORT_NO,
			BOOK_REPORT_NOTICE,
			BOOK_REPORT_TITLE,
			USER_ID,
			TO_CHAR(BOOK_REPORT_DATE, 'YYYY-MM-DD') AS "REPORT_DATE",
			BOOK_REPORT_COUNT,
			BOOK_REPORT_SECRET,
			BOOK_REPORT_STAR,
            ROWNUM AS RNUM
		FROM
			TB_BOOK_REPORT
		JOIN
			TB_USER USING(USER_NO)
		WHERE
			BOOK_REPORT_STATUS = 'Y'
        AND BOOK_REPORT_NOTICE = 1
            
		UNION ALL
		
		SELECT *
		FROM
			(SELECT A.*, ROWNUM AS RNUM
			 FROM    (SELECT
				      		BOOK_REPORT_NO,
				        	BOOK_REPORT_NOTICE,
				        	BOOK_REPORT_TITLE,
				        	USER_ID,
				        	TO_CHAR(BOOK_REPORT_DATE, 'YYYY-MM-DD') AS "REPORT_DATE",
				        	BOOK_REPORT_COUNT,
				        	BOOK_REPORT_SECRET,
				        	BOOK_REPORT_STAR
				      FROM
				            TB_BOOK_REPORT
				      JOIN
				            TB_USER USING(USER_NO)
				      WHERE
				            BOOK_REPORT_STATUS = 'Y'
				      AND 
				            BOOK_REPORT_NOTICE != 1
				      ORDER
				      BY
				            BOOK_REPORT_DATE DESC) A)
		   WHERE RNUM > #{startLimit}
		   <![CDATA[
		   AND RNUM <= ]]>(#{endLimit}-(SELECT COUNT(*)
					                    FROM
					                        TB_BOOK_REPORT
					                    WHERE
					                        BOOK_REPORT_STATUS = 'Y'
					                    AND BOOK_REPORT_NOTICE = 1))
		
	</select>
	
	<!-- 독후감 게시글 검색 개수 조회 -->
	<select id="searchReportCount" parameterType="hashmap" resultType="_int">
		SELECT
			COUNT(*)
		FROM
			TB_BOOK_REPORT
		JOIN
			TB_USER USING(USER_NO)
		WHERE 
			BOOK_REPORT_STATUS = 'Y'
		AND 
		<if test="condition == 'title'">
			BOOK_REPORT_TITLE
		</if>
		<if test="condition == 'content'">
			BOOK_REPORT_CONTENT
		</if>
		<if test="condition == 'writer'">
			USER_ID
		</if>
		LIKE '%' || '${keyword}' || '%'
	</select>
	
	<!-- 독후감 게시글 검색 조회 -->
	<select id="searchReportList" parameterType="hashmap" resultMap="bookReportResultSet">
		SELECT
			BOOK_REPORT_NO,
			BOOK_REPORT_NOTICE,
			BOOK_REPORT_TITLE,
			USER_ID,
			TO_CHAR(BOOK_REPORT_DATE, 'YYYY-MM-DD') AS "REPORT_DATE",
			BOOK_REPORT_COUNT,
			BOOK_REPORT_SECRET,
			BOOK_REPORT_STAR
		FROM
			TB_BOOK_REPORT
		JOIN
			TB_USER USING(USER_NO)
		WHERE 
			BOOK_REPORT_STATUS = 'Y'
		AND 
		<if test="condition == 'title'">
			BOOK_REPORT_TITLE
		</if>
		<if test="condition == 'content'">
			BOOK_REPORT_CONTENT
		</if>
		<if test="condition == 'writer'">
			USER_ID
		</if>
		LIKE '%' || '${keyword}' || '%'
		ORDER
		BY
			BOOK_REPORT_NOTICE DESC NULLS LAST,
			BOOK_REPORT_DATE DESC
	</select>
	
	<!-- 독후감 게시판 작성 -->
	<insert id="reportEnrollForm" parameterType="bookReport">
		INSERT 
		INTO 
			TB_BOOK_REPORT
					(
					BOOK_REPORT_NO,
					BOOK_REPORT_NOTICE,
					BOOK_REPORT_TITLE,
					BOOK_REPORT_CONTENT,
					USER_NO,
					BOOK_REPORT_SECRET,
					BOOK_REPORT_STAR
					)
		VALUES 
			(
			SEQ_BOOK_REPORT.NEXTVAL,
			#{bookReportNotice},
			#{bookReportTitle},
			#{bookReportContent},
			#{userNo},
			#{bookReportSecret},
			#{bookReportStar}
			)
	</insert>
	
	<!-- 독후감 게시판 조회수 증가 -->
	<update id="countReport" parameterType="_int">
		UPDATE TB_BOOK_REPORT
		SET BOOK_REPORT_COUNT = BOOK_REPORT_COUNT + 1
		WHERE BOOK_REPORT_NO = #{rno}
	</update>
	
	<!-- 독후감 게시판 상세조회 -->
	<select id="reportDetail" parameterType="_int" resultMap="bookReportResultSet">
		SELECT
			BOOK_REPORT_NO,
			BOOK_REPORT_NOTICE,
			BOOK_REPORT_TITLE,
			BOOK_REPORT_CONTENT,
			USER_ID,
			TO_CHAR(BOOK_REPORT_DATE, 'YYYY-MM-DD') AS "REPORT_DATE",
			BOOK_REPORT_COUNT,
			BOOK_REPORT_SECRET,
			BOOK_REPORT_STAR
		FROM
			TB_BOOK_REPORT 
		JOIN
			TB_USER USING(USER_NO)
		WHERE
			BOOK_REPORT_NO = #{rno}
	</select>
	
	<!-- 독후감 게시글 수정 -->
	<update id="reportUpdateForm" parameterType="bookReport">
		UPDATE 
			TB_BOOK_REPORT
		SET BOOK_REPORT_NOTICE = #{bookReportNotice},
			BOOK_REPORT_TITLE = #{bookReportTitle},
			BOOK_REPORT_CONTENT = #{bookReportContent},
			BOOK_REPORT_SECRET = #{bookReportSecret},
			BOOK_REPORT_STAR = #{bookReportStar}
		WHERE
			BOOK_REPORT_NO = #{bookReportNo}
	</update>
	
	<!-- 독후감 게시글 삭제(수정) -->
	<update id="reportDelete" parameterType="_int">
		UPDATE
			TB_BOOK_REPORT
		SET
			BOOK_REPORT_STATUS = 'N'
		WHERE
			BOOK_REPORT_NO = #{reportNo}
	</update>
	
	<!-- 독후감 게시글 신고 -->
	<insert id="reportBlack" parameterType="hashmap">
		INSERT ALL
		WHEN
		<![CDATA[
		(SELECT COUNT(*)
	    FROM TB_BOOK_REPORT_BLACK
	    WHERE
	        LOGIN_USER_NO = #{userNo}
	    AND
	        BOOK_REPORT_NO = #{reportNo}) < 1
	    ]]>
		THEN
		INTO
			TB_BOOK_REPORT_BLACK
		VALUES
			(
			SEQ_BOOK_REPORT_BLACK.NEXTVAL,
			(SELECT USER_NO
			  FROM TB_BOOK_REPORT
			  WHERE BOOK_REPORT_NO = #{reportNo}),
			#{userNo},
			#{reportNo}
			)
		SELECT * FROM DUAL
	</insert>
	
	<!-- 독후감 게시판 댓글 개수 조회 -->
	<select id="selectReportReplyCount" parameterType="_int" resultType="_int">
		SELECT COUNT(*)
		FROM TB_BOOK_REPORT_REPLY
		WHERE BOOK_REPORT_NO = #{reportNo}
	</select>
	
	<!-- 독후감 게시판 댓글 조회 -->
	<select id="selectReportReply" parameterType="_int" resultMap="bookReportReplyResultSet">
		SELECT
			BOOK_REPORT_REPLY_NO,
			TO_CHAR(BOOK_REPORT_REPLY_DATE, 'YYYY-MM-DD') AS "BOOK_REPLY_DATE",
			BOOK_REPORT_REPLY_CONTENT,
			USER_ID
		FROM
			TB_BOOK_REPORT_REPLY
		JOIN
			TB_USER USING(USER_NO)
		WHERE
			BOOK_REPORT_NO = #{reportNo}
		ORDER
		BY
			BOOK_REPORT_REPLY_DATE DESC
	</select>
	
	<!-- 독후감 게시판 댓글 등록 -->
	<insert id="insertReportReply" parameterType="hashmap">
		INSERT INTO TB_BOOK_REPORT_REPLY
		VALUES (
			SEQ_BOOK_REPORT_REPLY.NEXTVAL,
			SYSDATE,
			#{content},
			#{userNo},
			${reportNo}
			)
	</insert>
	
	<!-- 독후감 게시판 댓글 수정 -->
	<update id="updateReportReply" parameterType="hashmap">
		UPDATE TB_BOOK_REPORT_REPLY
		SET BOOK_REPORT_REPLY_CONTENT = #{content}
		WHERE
			BOOK_REPORT_REPLY_NO = #{replyNo}
	</update>
	
	<!-- 독후감 게시판 댓글 삭제 -->
	<delete id="deleteReportReply" parameterType="_int">
		DELETE FROM TB_BOOK_REPORT_REPLY
		WHERE BOOK_REPORT_REPLY_NO = #{replyNo}
	</delete>
	
	<!-- 독후감 게시판 댓글 신고 -->
	<insert id="replyBlack" parameterType="hashmap">
		INSERT ALL
		WHEN
		<![CDATA[
		(SELECT COUNT(*)
	    FROM TB_BOOK_REPORT_REPLY_BLACK
	    WHERE
	        LOGIN_USER_NO = #{userNo}
	    AND
	        BOOK_REPORT_REPLY_NO = #{reportReplyNo}) < 1
	    ]]>
		THEN
		INTO
			TB_BOOK_REPORT_REPLY_BLACK
		VALUES
			(
			SEQ_BOOK_REPORT_REPLY_BLACK.NEXTVAL,
			#{reportReplyNo},
			(SELECT USER_NO
			FROM TB_USER
			WHERE USER_ID = #{blackId}),
			#{userNo}
			)
		SELECT 1 FROM DUAL
	</insert>
	
	<!-- 마이페이지 북마크 도서목록 개수 조회 -->
	<select id="bookmarkCountMyPage" parameterType="_int" resultType="_int">
		SELECT COUNT(*)
		FROM TB_LIKE_BOOK
		WHERE USER_NO = #{userNo}
	</select>
	
	<!-- 마이페이지 북마크 도서목록 조회 -->
	<select id="bookmarkMyPage" parameterType="_int" resultType="string">
		SELECT 
		    ISBN13
		FROM TB_LIKE_BOOK
		WHERE USER_NO = #{userNo}
	</select>
	
	<!-- 마이페이지 한줄평 도서목록 개수 조회 -->
	<select id="bookReplyCountMyPage" parameterType="_int" resultType="_int">
		SELECT COUNT(*)
		FROM TB_BOOK_REPLY
		WHERE USER_NO = #{userNo}
	</select>

	<!-- 마이페이지 한줄평 도서목록 조회 -->
	<select id="bookReplyMyPage" parameterType="_int" resultMap="bookReplyResultSet">
		SELECT 
			ISBN13,
			BOOK_REPLY_CONTENT
		FROM TB_BOOK_REPLY
		WHERE USER_NO = #{userNo}
		ORDER BY BOOK_REPLY_DATE DESC
	</select>
	
	<!-- 마이페이지 독후감 게시글 개수 조회 -->
	<select id="reportCountMyPage" parameterType="_int" resultType="_int">
		SELECT COUNT(*)
		FROM TB_BOOK_REPORT
		WHERE USER_NO = #{userNo}
	</select>
	
	<!-- 마이페이지 독후감 게시글 조회 -->
	<select id="reportMyPage" parameterType="_int" resultMap="bookReportResultSet">
		SELECT 
			BOOK_REPORT_NO,
			BOOK_REPORT_TITLE,
			BOOK_REPORT_SECRET,
			BOOK_REPORT_STAR, 
			TO_CHAR(BOOK_REPORT_DATE, 'YYYY-MM-DD') AS "REPORT_DATE",
			BOOK_REPORT_COUNT
		FROM TB_BOOK_REPORT
		WHERE USER_NO = #{userNo}
		AND BOOK_REPORT_STATUS = 'Y'
		ORDER BY BOOK_REPORT_DATE DESC
	</select>
	
	<!-- 마이페이지 독후감 게시글 댓글 개수 조회 -->
	<select id="reportReplyCountMyPage" parameterType="_int" resultType="_int">
		SELECT COUNT(TBRR.book_report_no)
		FROM TB_BOOK_REPORT_REPLY TBRR
		JOIN TB_BOOK_REPORT TBR
        ON TBRR.BOOK_REPORT_NO = TBR.BOOK_REPORT_NO
		WHERE TBRR.USER_NO = #{userNo}
		AND BOOK_REPORT_STATUS = 'Y'
	</select>
	
	<!-- 마이페이지 독후감 게시글 댓글 조회 -->
	<select id="reportReplyMyPage" parameterType="_int" resultMap="bookReportReplyResultSet">
		SELECT
		    BOOK_REPORT_REPLY_NO,
		    TO_CHAR(BOOK_REPORT_REPLY_DATE, 'YYYY-MM-DD') AS "BOOK_REPLY_DATE",
		    BOOK_REPORT_REPLY_CONTENT,
		    TBRR.BOOK_REPORT_NO
		FROM TB_BOOK_REPORT_REPLY TBRR
		JOIN TB_BOOK_REPORT TBR
		ON TBRR.BOOK_REPORT_NO = TBR.BOOK_REPORT_NO
		WHERE TBRR.USER_NO = #{userNo}
		AND BOOK_REPORT_STATUS = 'Y'
		ORDER BY
			BOOK_REPORT_REPLY_DATE DESC
	</select>
	
	<!-- 관리자페이지 신고게시글 개수 조회  -->
	<select id="adminReportBlackCount" resultType="_int">
		SELECT COUNT(*)
		FROM (SELECT BOOK_REPORT_NO,REPORT_COUNT 
		        FROM (SELECT 
		        			 DISTINCT BRB.BOOK_REPORT_NO, 
		        			 COUNT(*) OVER (PARTITION BY BRB.BOOK_REPORT_NO) AS REPORT_COUNT
		                FROM TB_BOOK_REPORT_BLACK BRB
                        JOIN TB_BOOK_REPORT BR
                        ON BRB.BOOK_REPORT_NO = BR.BOOK_REPORT_NO
                        WHERE BOOK_REPORT_STATUS = 'Y')
		        WHERE REPORT_COUNT > 5)
	</select>
	
	<!-- 관리자페이지 신고게시글 목록 조회 -->
	<select id="adminReportBlack" resultMap="bookReportResultSet">
		SELECT 
			BRB.BOOK_REPORT_NO AS "BOOK_REPORT_NO",
			USER_ID,
			BOOK_REPORT_TITLE,
			TO_CHAR(BOOK_REPORT_DATE, 'YYYY-MM-DD') AS "REPORT_DATE",
			BOOK_REPORT_STAR
		FROM 
			TB_BOOK_REPORT_BLACK BRB
		JOIN
			TB_BOOK_REPORT BR 
		ON BRB.BOOK_REPORT_NO = BR.BOOK_REPORT_NO
		JOIN TB_USER U
		ON U.USER_NO = BRB.BLACK_USER_NO
		WHERE BRB.BOOK_REPORT_NO 
			IN (SELECT 
					BOOK_REPORT_NO
		        FROM (SELECT 
		        			DISTINCT BRB.BOOK_REPORT_NO, 
		        			COUNT(*) OVER (PARTITION BY BRB.BOOK_REPORT_NO) AS REPORT_COUNT
		               FROM TB_BOOK_REPORT_BLACK BRB
	                                     JOIN TB_BOOK_REPORT BR
	                                     ON BRB.BOOK_REPORT_NO = BR.BOOK_REPORT_NO
	                                     WHERE BOOK_REPORT_STATUS = 'Y')
		        WHERE REPORT_COUNT > 5)
		ORDER BY 
			BOOK_REPORT_DATE DESC
	</select>
	
	<!-- 관리자페이지 신고댓글 개수 조회 -->
	<select id="adminReportReplyBlackCount" resultType="_int">
		SELECT COUNT(*)
		FROM (SELECT BOOK_REPORT_REPLY_NO, REPLY_COUNT 
		        FROM (SELECT DISTINCT BOOK_REPORT_REPLY_NO, COUNT(*) OVER (PARTITION BY BOOK_REPORT_REPLY_NO) AS REPLY_COUNT
		                FROM TB_BOOK_REPORT_REPLY_BLACK)
		        WHERE REPLY_COUNT > 0)
	</select>
	
	<!-- 관리자페이지 신고댓글 목록 조회 -->
	<select id="adminReportReplyBlack" resultMap="bookReportReplyResultSet">
		SELECT 
			DISTINCT BRRB.BOOK_REPORT_REPLY_NO,
			USER_ID,
			BOOK_REPORT_REPLY_CONTENT,
    		TO_CHAR(BOOK_REPORT_REPLY_DATE, 'YYYY-MM-DD') AS "REPORT_REPLY_DATE",
    		BOOK_REPORT_REPLY_DATE
		FROM 
			TB_BOOK_REPORT_REPLY_BLACK BRRB
		JOIN
			TB_BOOK_REPORT_REPLY BRR 
		ON BRRB.BOOK_REPORT_REPLY_NO = BRR.BOOK_REPORT_REPLY_NO
		JOIN TB_USER U
		ON U.USER_NO = BRRB.BLACK_USER_NO
		WHERE BRRB.BOOK_REPORT_REPLY_NO IN 
				(SELECT BOOK_REPORT_REPLY_NO
				FROM (SELECT DISTINCT BOOK_REPORT_REPLY_NO, 
				      COUNT(*) OVER (PARTITION BY BOOK_REPORT_REPLY_NO) AS REPLY_COUNT
				      FROM TB_BOOK_REPORT_REPLY_BLACK)
				WHERE REPLY_COUNT > 0)
		ORDER BY
			BOOK_REPORT_REPLY_DATE DESC
	</select>
	
	<!-- 관리자 페이지 신고게시글 삭제 -->
	<update id="deleteReportBlack" parameterType="_int">
		UPDATE TB_BOOK_REPORT
		SET BOOK_REPORT_STATUS = 'N'
		WHERE BOOK_REPORT_NO = #{reportBlackNo}
	</update>
	
	<!-- 관리자 페이지 신고댓글 삭제 -->
	<delete id="deleteReplyBlack" parameterType="_int">
		DELETE FROM TB_BOOK_REPORT_REPLY
		WHERE BOOK_REPORT_REPLY_NO = #{replyBlackNo}
	</delete>
	
	
	
	
</mapper>

